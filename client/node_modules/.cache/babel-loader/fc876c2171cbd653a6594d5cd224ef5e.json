{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (error) {}\n\n  ;\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/mus/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInStart","signInWithGoogle","userRef","signInWithPopup","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAMC,OAAO,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CAAtB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH,GAHD,CAGC,OAAOI,KAAP,EAAa,CAEb;;AAAA;AACJ;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMf,UAAU,CAACI,eAAe,CAACY,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACH;AAAA;AAGD,OAAO,UAAUQ,SAAV,GAAsB;AACzB,QAAMf,GAAG,CAAC,CACNC,IAAI,CAACY,mBAAD,CADE,CAAD,CAAT;AAGH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport userActionTypes from './user.types';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\r\nimport { googleSignInStart } from './user.actions';\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const userRef = yield auth.signInWithPopup(googleProvider);\r\n        console.log(userRef);\r\n    }catch (error){\r\n\r\n    };\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n};\r\n\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        ])\r\n};"]},"metadata":{},"sourceType":"module"}