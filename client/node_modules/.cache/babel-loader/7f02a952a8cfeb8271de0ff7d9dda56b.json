{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBsNmhm_e8BlIcD-xMPde5IMSfzsPuEnu4\",\n  authDomain: \"mus-shop-db.firebaseapp.com\",\n  projectId: \"mus-shop-db\",\n  storageBucket: \"mus-shop-db.appspot.com\",\n  messagingSenderId: \"1050618654548\",\n  appId: \"1:1050618654548:web:5d16f6d08afa7c7c3ee2c1\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date(); //TODO: checking if user exists, if not create new user object in collections.\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n\n    ;\n  }\n\n  ;\n  return userRef;\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\n;\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider(); //TODO: select_account will always trigger the google popup when we sign in.\n//TODO: signInWithPopup is where we can choose 'Facebook, Twitter, Github, etc.', after enabling it in firebase site\n\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/bryan.alvarez/Documents/webdev/git/mus/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","apps","length","initializeApp","app","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,6BAFO;AAGnBC,EAAAA,SAAS,EAAE,aAHQ;AAInBC,EAAAA,aAAa,EAAE,yBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,eALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB;AASA,OAAO,MAAMC,yBAAyB,GAAG,OAAMC,QAAN,EAAgBC,cAAhB,KAAmC;AAE1E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AACnB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB,CAFmB,CAInB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOC,OAAOa,KAAP,EAAc;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;;AAAA;AACF;;AAAA;AAED,SAAOf,OAAP;AACD,CA1BM;;AA4BP,IAAI,CAACX,QAAQ,CAAC2B,IAAT,CAAcC,MAAnB,EAA2B;AACzB5B,EAAAA,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AACD,CAFD,MAEM;AACJD,EAAAA,QAAQ,CAAC8B,GAAT,GADI,CACY;AACjB;;AAAA;AAED,OAAO,MAAMC,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMnB,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMoB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB,C,CACA;AACA;;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBsNmhm_e8BlIcD-xMPde5IMSfzsPuEnu4\",\r\n    authDomain: \"mus-shop-db.firebaseapp.com\",\r\n    projectId: \"mus-shop-db\",\r\n    storageBucket: \"mus-shop-db.appspot.com\",\r\n    messagingSenderId: \"1050618654548\",\r\n    appId: \"1:1050618654548:web:5d16f6d08afa7c7c3ee2c1\"\r\n  };\r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\r\n  \r\n  if(!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if(!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    //TODO: checking if user exists, if not create new user object in collections.\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    }catch (error) {\r\n      console.log('error creating user', error.message)\r\n    };\r\n  };\r\n\r\n  return userRef;\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}else {\r\n  firebase.app(); // if already initialized, use that one\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n//TODO: select_account will always trigger the google popup when we sign in.\r\n//TODO: signInWithPopup is where we can choose 'Facebook, Twitter, Github, etc.', after enabling it in firebase site\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}